#############################################################################
#
# The settings below have been inserted by the configure command.
#
# If they do not work, you can either
#
# - try to specify the right settings to configure via the "configure" 
#   command line options
# - or edit Makefile.template directly. E.g., if CFG_MOTIF_LIBS seems
#   to hold the wrong values, search for CFG_MOTIF_LIBS in Makefile.template,
#   read the comments in the respective section, and specify the right value 
#   for MOTIF_LIBS there.
#
#   DO NOT EDIT THIS FILE OR ANY OF THE CFG_* VALUES, as they will be deleted
#   or overridden by certain make options (such as 'make distclean')
#
#############################################################################

CFLAGS = -O2 -fomit-frame-pointer -Wall -D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -I. 
LDFLAGS =   
SHELL = /bin/bash
CFG_PACKAGE = dvdisaster
CFG_VERSION = 0.66
MAKE = /usr/bin/gmake
CC = /dvd/gcc/bin/gcc
CFG_SRCDIR = /home/carsten/sandbox/dvdisaster-0.66
CFG_PKGNAME = dvdisaster-0.66
CFG_PREFIX = /usr/local
CFG_BINDIR = /usr/local/bin
CFG_MANDIR = /usr/local/man
CFG_DOCDIR = /usr/share/doc
CFG_DOCSUBDIR = dvdisaster-0.66
CFG_LOCALEDIR = /usr/share/locale
CFG_BUILDROOT = 
CFG_GTK2_CFLAGS = -I/opt/gnome/include/gtk-2.0 -I/opt/gnome/lib/gtk-2.0/include -I/opt/gnome/include/atk-1.0 -I/opt/gnome/include/pango-1.0 -I/usr/X11R6/include -I/usr/include/freetype2 -I/usr/include/freetype2/config -I/opt/gnome/include/glib-2.0 -I/opt/gnome/lib/glib-2.0/include  
CFG_GTK2_LIBS = -pthread -Wl,--export-dynamic -L/opt/gnome/lib -lgthread-2.0 -lgtk-x11-2.0 -lgdk-x11-2.0 -latk-1.0 -lgdk_pixbuf-2.0 -lm -lpangoxft-1.0 -lpangox-1.0 -lpango-1.0 -lgobject-2.0 -lgmodule-2.0 -ldl -lglib-2.0  
CFG_GTK2_BINDIR = /usr/bin
CFG_LOCALE_INCL = 
CFG_INTL_INCL = 
CFG_INTL_LFLAGS = 
CFG_INTL_LIBS = 
CFG_CAM_LFLAGS = 
CFG_CAM_LIBS = 

CFG_CFILES = method-link.c closure.c crc32.c curve.c debug.c dvdisaster.c ecc-rs01.c ecc-rs02.c endian.c file.c galois.c help-dialogs.c icon-factory.c large-io.c main-window.c md5.c memtrack.c menubar.c method.c misc.c preferences.c print-sense.c random.c read-adaptive.c read-adaptive-window.c read-linear.c read-linear-window.c rs01-common.c rs01-compare.c rs01-create.c rs01-fix.c rs01-window.c rs02-common.c rs02-compare.c rs02-create.c rs02-fix.c rs02-window.c scsi-freebsd.c scsi-layer.c scsi-linux.c scsi-unknown.c scsi-win32.c show-manual.c spiral.c style.c udf.c welcome-window.c
CFG_OFILES = method-link.o closure.o crc32.o curve.o debug.o dvdisaster.o ecc-rs01.o ecc-rs02.o endian.o file.o galois.o help-dialogs.o icon-factory.o large-io.o main-window.o md5.o memtrack.o menubar.o method.o misc.o preferences.o print-sense.o random.o read-adaptive.o read-adaptive-window.o read-linear.o read-linear-window.o rs01-common.o rs01-compare.o rs01-create.o rs01-fix.o rs01-window.o rs02-common.o rs02-compare.o rs02-create.o rs02-fix.o rs02-window.o scsi-freebsd.o scsi-layer.o scsi-linux.o scsi-unknown.o scsi-win32.o show-manual.o spiral.o style.o udf.o welcome-window.o

CFG_SYS_OPTIONS  = -DSYS_LINUX
CFG_EXE_SUFFIX   = 
CFG_HAVE_OPTIONS =  -DHAVE_GETOPT_LONG -DHAVE_GETTEXT -DHAVE_ROUND -DHAVE_O_LARGEFILE -DHAVE_LITTLE_ENDIAN -DHAVE_XGETTEXT -DHAVE_MSGMERGE -DHAVE_MSGFMT -DHAVE_GDK_PIXBUF_CSOURCE
CFG_WITH_OPTIONS =  -DWITH_NLS_YES -DWITH_MEMDEBUG_NO -DWITH_EFENCE_NO
CFG_OTHER_OPTIONS =  -DRELEASE_MICRO=\"1\" -DRELEASE_STATUS=\"patch\"

######################################################################
# Begin of dvdisaster makefile template
######################################################################

######################################################################
# Take over variables from configure
######################################################################

VERSION = $(CFG_VERSION)

SRCDIR = $(CFG_SRCDIR)
PKGNAME = $(CFG_PKGNAME)
PREFIX = $(CFG_PREFIX)
BINDIR = $(CFG_BINDIR)
MANDIR = $(CFG_MANDIR)
DOCDIR = $(CFG_DOCDIR)
DOCSUBDIR = $(CFG_DOCDIR)/$(CFG_DOCSUBDIR)
LOCALEDIR = $(CFG_LOCALEDIR)
BUILDROOT = $(CFG_BUILDROOT)

INTL_INCL   = $(CFG_INTL_INCL)
INTL_LFLAGS = $(CFG_INTL_LFLAGS)
INTL_LIBS   = $(CFG_INTL_LIBS)

CAM_LFLAGS = $(CFG_CAM_LFLAGS)
CAM_LIBS   = $(CFG_CAM_LIBS)

GTK_CFLAGS   = $(CFG_GTK2_CFLAGS)
GTK_LIBS     = $(CFG_GTK2_LIBS)
GTK_BINDIR   = $(CFG_GTK2_BINDIR)

EFENCE_LFLAGS = $(CFG_EFENCE_LFLAGS)
EFENCE_LIBS   = $(CFG_EFENCE_LIBS)

SYS_OPTIONS  = $(CFG_SYS_OPTIONS)
HAVE_OPTIONS = $(CFG_HAVE_OPTIONS)
WITH_OPTIONS = $(CFG_WITH_OPTIONS)
OTHER_OPTIONS = $(CFG_OTHER_OPTIONS)
EXE_SUFFIX   = $(CFG_EXE_SUFFIX)

LOCATIONS = -DSRCDIR=\"$(SRCDIR)\" -DBINDIR=\"$(BINDIR)\" -DDOCDIR=\"$(DOCSUBDIR)\" -DLOCALEDIR=\"$(LOCALEDIR)\"
COPTS = $(CFLAGS) $(LOCATIONS) $(SYS_OPTIONS) $(HAVE_OPTIONS) $(WITH_OPTIONS) $(OTHER_OPTIONS) $(INTL_INCL) $(CAM_INCL) $(GTK_CFLAGS)
LOPTS = $(LDFLAGS) $(INTL_LFLAGS) $(CAM_LFLAGS) $(EFENCE_LFLAGS)

LIBS = $(INTL_LIBS) $(CAM_LIBS) $(GTK_LIBS) $(EFENCE_LIBS) -lm

CFILES = $(CFG_CFILES)
OFILES = $(CFG_OFILES)

######################################################################
# Compilation related
######################################################################

.PHONY : all show locale html images pack-images

.c.o:
	@echo "Compiling:" $*.c
	@$(CC) $(COPTS) -c $*.c

all: dvdisaster html images

# Building the dvdisaster binary

dvdisaster: version.h inlined-icons.h $(OFILES) 
	@if test $(CFG_SYS_OPTIONS) == -DSYS_MINGW; \
	then echo "Linking  : dvdisaster-win, dvdisaster"; \
	     windres -v winres.rc -O coff -o winres.o >/dev/null ; \
	     $(CC) $(COPTS) -c dvdisaster.c ; \
	     $(CC) $(LOPTS) $(OFILES) winres.o $(LIBS) -mwindows -o dvdisaster-win; \
	     $(CC) $(COPTS) -DWIN_CONSOLE -c dvdisaster.c ; \
	     $(CC) $(LOPTS) $(OFILES) $(LIBS) -o dvdisaster; \
	else echo "Linking  : dvdisaster"; \
	     $(CC) $(LOPTS) $(OFILES) $(LIBS) -o dvdisaster; \
	fi
	@if test -e locale/de/LC_MESSAGES/dvdisaster.mo \
	 || echo $(WITH_OPTIONS) | grep -q "NLS_NO"; \
	then echo "not touching locale"; \
	else $(MAKE) --no-print-directory -C locale; \
	fi

inlined-icons.h: icons/read.png icons/create.png icons/scan.png icons/fix.png icons/compare.png
	@gdk-pixbuf-csource --raw --name=dvdisaster_read     icons/read.png      >inlined-icons.h
	@gdk-pixbuf-csource --raw --name=dvdisaster_create   icons/create.png   >>inlined-icons.h
	@gdk-pixbuf-csource --raw --name=dvdisaster_scan     icons/scan.png     >>inlined-icons.h
	@gdk-pixbuf-csource --raw --name=dvdisaster_fix      icons/fix.png      >>inlined-icons.h
	@gdk-pixbuf-csource --raw --name=dvdisaster_compare  icons/compare.png  >>inlined-icons.h
	@gdk-pixbuf-csource --raw --name=dvdisaster_open_ecc icons/open-ecc.png >>inlined-icons.h
	@gdk-pixbuf-csource --raw --name=dvdisaster_open_img icons/open-img.png >>inlined-icons.h

locale:
	@$(MAKE) --no-print-directory -C locale

version.h:
	@echo "#define VERSION \"$(VERSION)\"" > version.h

# Stuff needed to generate or prepare the documentation

documentation/de/index.html: documentation/create.bash documentation/create-cs.bash documentation/create-de.bash documentation/create-en.bash
	@cd documentation ; bash create.bash local $(VERSION) $(PKGNAME)

html: documentation/de/index.html

documentation/images/open-img.png:
	@if test -e THESE_ARE_THE_DEVEL_SOURCES; then \
	  echo "not touching images"; \
        else \
	  $(MAKE) --no-print-directory -C tools; \
	  echo -n "Unpacking images (may take a while) ... "; \
	  cd $(SRCDIR)/documentation/images; \
	  $(SRCDIR)/tools/pngpack ../images-common.pngpack >../pngpack.log; \
	  cd $(SRCDIR)/documentation/cs/images; \
	  $(SRCDIR)/tools/pngpack ../../images-cs.pngpack >>../../pngpack.log; echo -n "cs "; \
	  cd $(SRCDIR)/documentation/de/images; \
	  $(SRCDIR)/tools/pngpack ../../images-de.pngpack >>../../pngpack.log; echo -n "de ";\
	  cd $(SRCDIR)/documentation/en/images; \
	  $(SRCDIR)/tools/pngpack ../../images-en.pngpack >>../../pngpack.log; echo -n "en "; \
	  echo "- done"; \
        fi

images: documentation/images/open-img.png

pack-images: tools/pngpack
	@echo -n "Packing images (may take a while) ... "
	@cd documentation/images; $(SRCDIR)/tools/pngpack ../images-common.pngpack *.png >../pngpack.log;
	@cd documentation/cs/images; $(SRCDIR)/tools/pngpack ../../images-cs.pngpack *.png >>../../pngpack.log;
	@echo -n "cs ";
	@cd documentation/de/images; $(SRCDIR)/tools/pngpack ../../images-de.pngpack *.png >>../../pngpack.log;
	@echo -n "de ";
	@cd documentation/en/images; $(SRCDIR)/tools/pngpack ../../images-en.pngpack *.png >>../../pngpack.log;
	@echo -n "en ";
	@echo "- done"

tools/pngpack: tools/pngpack.c
	@$(MAKE) --no-print-directory -C tools

# Build configuration printing

show: 
	@echo -e "Current build configuration in ./GNUmakefile:\n" 
	@echo "VERSION      = " $(VERSION)
	@echo "CC           = " $(CC)
	@echo "MAKE         = " $(MAKE)
	@echo "SHELL        = " $(SHELL)
	@echo "SRCDIR       = " $(SRCDIR)
	@echo "PKGNAME      = " $(PKGNAME)
	@echo "PREFIX       = " $(PREFIX)
	@echo "BINDIR       = " $(BINDIR)
	@echo "MANDIR       = " $(MANDIR)
	@echo "LOCALEDIR    = " $(LOCALEDIR)
	@echo "DOCDIR       = " $(DOCDIR)
	@echo "DOCSUBDIR    = " $(DOCSUBDIR)
	@echo "BUILDROOT    = " $(BUILDROOT)
	@echo
	@echo "INTL_INCL    = " $(INTL_INCL)
	@echo "INTL_LFLAGS  = " $(INTL_LFLAGS)
	@echo "INTL_LIBS    = " $(INTL_LIBS)
	@echo "GTK_CFLAGS   = " $(GTK_CFLAGS)
	@echo "GTK_LIBS     = " $(GTK_LIBS)
	@echo "GTK_BINDIR   = " $(GTK_BINDIR)
	@echo "EFENCE_LFLAGS= " $(EFENCE_LFLAGS)
	@echo "EFENCE_LIBS  = " $(EFENCE_LIBS)
	@echo
	@echo "SYS_OPTIONS  = " $(SYS_OPTIONS)
	@echo "EXE_SUFFIX   = " $(EXE_SUFFIX)
	@echo "HAVE_OPTIONS = " $(HAVE_OPTIONS)
	@echo "WITH_OPTIONS = " $(WITH_OPTIONS)
	@echo "OTHER_OPTIONS= " $(OTHER_OPTIONS)
	@echo
	@echo "CFLAGS       = " $(CFLAGS)
	@echo "COPTS        = " $(COPTS)
	@echo "LIBS         = " $(LIBS)
	@echo "LOPTS        = " $(LOPTS)

######################################################################
# Distribution management
######################################################################

.PHONY : install uninstall clean distclean arch www berlios-images berlios sf sf-images srcdist bindist

install: dvdisaster html images
	@echo "Installing package..."
	install -d $(BUILDROOT)$(BINDIR)
	install dvdisaster$(EXE_SUFFIX) $(BUILDROOT)$(BINDIR)
	install -d $(BUILDROOT)$(DOCSUBDIR)
	install -m 644 CHANGELOG $(BUILDROOT)$(DOCSUBDIR)
	install -m 644 COPYING $(BUILDROOT)$(DOCSUBDIR)
	install -m 644 CREDITS* $(BUILDROOT)$(DOCSUBDIR)
	install -m 644 TODO $(BUILDROOT)$(DOCSUBDIR)
	install -d $(BUILDROOT)$(DOCSUBDIR)/cs
	cd documentation; install -m 644 cs/*.html $(BUILDROOT)$(DOCSUBDIR)/cs
	install -d $(BUILDROOT)$(DOCSUBDIR)/de
	cd documentation; install -m 644 de/*.html $(BUILDROOT)$(DOCSUBDIR)/de
	install -d $(BUILDROOT)$(DOCSUBDIR)/en
	cd documentation; install -m 644 en/*.html $(BUILDROOT)$(DOCSUBDIR)/en
	install -d $(BUILDROOT)$(DOCSUBDIR)/images
	cd documentation; install -m 644 images/*.png $(BUILDROOT)$(DOCSUBDIR)/images
	cd documentation; install -m 644 images/*.jpg $(BUILDROOT)$(DOCSUBDIR)/images
	install -d $(BUILDROOT)$(DOCSUBDIR)/cs/images
	cd documentation/cs; install -m 644 images/*.png $(BUILDROOT)$(DOCSUBDIR)/cs/images
	install -d $(BUILDROOT)$(DOCSUBDIR)/de/images
	cd documentation/de; install -m 644 images/*.png $(BUILDROOT)$(DOCSUBDIR)/de/images
	install -d $(BUILDROOT)$(DOCSUBDIR)/en/images
	cd documentation/en; install -m 644 images/*.png $(BUILDROOT)$(DOCSUBDIR)/en/images
	install -d $(BUILDROOT)$(MANDIR)/man1
	install -d $(BUILDROOT)$(MANDIR)/cs/man1
	install -d $(BUILDROOT)$(MANDIR)/de/man1
	install -d $(BUILDROOT)$(MANDIR)/it/man1
	cd documentation; \
	  ESCAPED_DOCSUBDIR=`echo $(DOCSUBDIR) | sed -e 's/\//\\\\\//g'`; \
	  sed "s/%docdir%/$$ESCAPED_DOCSUBDIR\/en/" <dvdisaster.en.1 >dvdisaster.updated; \
	  install -m 644 dvdisaster.updated $(BUILDROOT)$(MANDIR)/man1/dvdisaster.1; \
	  sed "s/%docdir%/$$ESCAPED_DOCSUBDIR\/cs/" <dvdisaster.cs.1 >dvdisaster.updated; \
	  install -m 644 dvdisaster.updated $(BUILDROOT)$(MANDIR)/cs/man1/dvdisaster.1; \
	  sed "s/%docdir%/$$ESCAPED_DOCSUBDIR\/de/" <dvdisaster.de.1 >dvdisaster.updated; \
	  install -m 644 dvdisaster.updated $(BUILDROOT)$(MANDIR)/de/man1/dvdisaster.1; \
	  sed "s/%docdir%/$$ESCAPED_DOCSUBDIR\/en/" <dvdisaster.it.1 >dvdisaster.updated; \
	  install -m 644 dvdisaster.updated $(BUILDROOT)$(MANDIR)/it/man1/dvdisaster.1; \
	  rm dvdisaster.updated
	if echo $(WITH_OPTIONS) | grep -q "NLS_YES"; then \
	  cd locale; \
	  for i in ??; do\
	    install -d $(BUILDROOT)$(LOCALEDIR)/$$i/LC_MESSAGES; \
	    install -m 644 $$i/LC_MESSAGES/dvdisaster.mo $(BUILDROOT)$(LOCALEDIR)/$$i/LC_MESSAGES; \
	  done \
	fi
	@echo "# dvdisaster uninstaller script" > $(BUILDROOT)$(BINDIR)/dvdisaster-uninstall.sh
	@echo "# Usage: sh dvdisaster-uninstall.sh" >> $(BUILDROOT)$(BINDIR)/dvdisaster-uninstall.sh
	@echo >> $(BUILDROOT)$(BINDIR)/dvdisaster-uninstall.sh
	@echo "rm -f $(BINDIR)/dvdisaster $(BINDIR)/dvdisaster.exe $(BINDIR)/dvdisaster-win.exe $(BINDIR)/dvdisaster-uninstall.sh" >> $(BUILDROOT)$(BINDIR)/dvdisaster-uninstall.sh
	@echo "rm -rf $(DOCSUBDIR)" >> $(BUILDROOT)$(BINDIR)/dvdisaster-uninstall.sh
	@echo "rm -f $(MANDIR)/man1/dvdisaster.1" >> $(BUILDROOT)$(BINDIR)/dvdisaster-uninstall.sh
	@for i in cs de it; do \
	  echo "rm $(LOCALEDIR)/$$i/LC_MESSAGES/dvdisaster.mo" >> $(BUILDROOT)$(BINDIR)/dvdisaster-uninstall.sh ; \
	  echo "rm $(MANDIR)/$$i/man1/dvdisaster.1" >> $(BUILDROOT)$(BINDIR)/dvdisaster-uninstall.sh ; \
	done
	@echo "echo \"dvdisaster has been uninstalled.\"" >> $(BUILDROOT)$(BINDIR)/dvdisaster-uninstall.sh
	
uninstall:
	@echo "Uninstalling package..."
	rm -f $(BINDIR)/dvdisaster $(BINDIR)/dvdisaster.exe $(BINDIR)/dvdisaster-win.exe $(BINDIR)/dvdisaster-uninstall.bash
	rm -rf $(DOCSUBDIR)
	rm -f $(MANDIR)/man1/dvdisaster.1
	for i in cs de it; do \
	   rm $(LOCALEDIR)/$$i/LC_MESSAGES/dvdisaster.mo; \
	   rm $(MANDIR)/$$i/man1/dvdisaster.1; \
	done

distclean: clean
	@echo "Removing configuration files"
	@rm -f configure.log Makefile.config GNUmakefile locale/Makefile
	@for i in locale/??; do rm -rf $$i; done
	@echo "all:" >>GNUmakefile
	@echo -e "\t@echo" >>GNUmakefile
	@echo -e "\t@echo \"Please create a Makefile by entering \\\"bash configure\\\" first\"" >>GNUmakefile
	@echo -e "\t@echo" >>GNUmakefile
	@if test -e tools/Makefile.config; then $(MAKE) --no-print-directory -C tools distclean; fi

clean:
	@echo "Removing rebuildable files"
	@rm -rf *.o medium.* dvdisaster *.exe .dvdisaster core *.core *.stackdump
	@rm -f inlined-icons.h installer.iss
	@find . -name \*\~ -print | xargs rm -f;
	@find . -name \*.mo -print | xargs rm -f;
	@rm -rf documentation/cs/*.html documentation/de/*.html documentation/en/*.html
#	@if test -e THESE_ARE_THE_DEVEL_SOURCES; then rm -f documentation/images*.pngpack; fi
	@rm -f documentation/pngpack.log
	@rm -f version.h
	@if test -e tools/Makefile.config; then $(MAKE) --no-print-directory -C tools clean; fi
	@if test -e $(PKGNAME); then rm -rf $(PKGNAME); fi

arch:	clean distclean
	@cd .. ; tar -c -z -f $(PKGNAME)-arch.tgz $(PKGNAME)

www:
	@echo -e "Please use one of the following targets:\n"
	@echo "make berlios    # create WWW pages for hosting at BerliOS"
	@echo "make sf         # create WWW pages for hosting at SourceForge"

sf:
	@cd documentation ; ./create.bash sf $(VERSION) ; \
	tar cjf ../../sf.tar.bz2 pubkey.asc cs/*.html de/*.html en/*.html

sf-images:
	@cd documentation ; ./create.bash sf $(VERSION) ; \
	tar cjf ../../sf.tar.bz2 cs/*.html de/*.html en/*.html images/*.jpg images/*.png cs/images/*.png de/images/*.png en/images/*.png

berlios:
	@cd documentation ; ./create.bash berlios $(VERSION) ; \
	tar cjf ../../berlios.tar.bz2 pubkey.asc cs/*.html de/*.html en/*.html

berlios-images:
	@cd documentation ; ./create.bash berlios $(VERSION) ; \
	tar cjf ../../berlios.tar.bz2 cs/*.html de/*.html en/*.html images/*.jpg images/*.png cs/images/*.png de/images/*.png en/images/*.png

srcdist: pack-images clean distclean 
	@cd .. ; tar -c -j -X $(PKGNAME)/NODIST -f $(PKGNAME).tar.bz2 $(PKGNAME)
	@cd .. ; gpg --default-key 091ad320 --detach-sign --armor $(PKGNAME).tar.bz2
	@rm -f documentation/images-*.pngpack

bindist: dvdisaster html pack-images
	@mkdir $(PKGNAME)
	@mkdir $(PKGNAME)/documentation
	@cp -r CHANGELOG COPYING CREDITS* TODO dvdisaster.exe dvdisaster-win.exe $(PKGNAME)
	@cp documentation/pubkey.asc $(PKGNAME)/documentation
	@for i in cs de en; do \
	  mkdir $(PKGNAME)/documentation/$$i; \
	  cp documentation/$$i/*.html $(PKGNAME)/documentation/$$i; \
	done
	@mkdir $(PKGNAME)/documentation/images
	@cp documentation/images/*.jpg $(PKGNAME)/documentation/images
	@cp tools/pngpack.exe $(PKGNAME)/documentation
	@mv documentation/images-*.pngpack $(PKGNAME)/documentation
	@(cd $(PKGNAME); tar xzf ../../pango-subdirs.tgz)
	@cp $(GTK_BINDIR)/libglib*.dll $(PKGNAME)
	@cp $(GTK_BINDIR)/iconv.dll $(PKGNAME)
	@cp $(GTK_BINDIR)/intl.dll $(PKGNAME)
	@cp $(GTK_BINDIR)/libatk*.dll $(PKGNAME)
	@cp $(GTK_BINDIR)/libpango*.dll $(PKGNAME)
	@cp $(GTK_BINDIR)/libgmodule*.dll $(PKGNAME)
	@cp $(GTK_BINDIR)/libgobject*.dll $(PKGNAME)
	@cp $(GTK_BINDIR)/libgthread*.dll $(PKGNAME)
	@cp $(GTK_BINDIR)/libgdk_pixbuf*.dll $(PKGNAME)
	@cp $(GTK_BINDIR)/libgdk-win*.dll $(PKGNAME)
	@cp $(GTK_BINDIR)/libgtk-win*.dll $(PKGNAME)
	@mkdir $(PKGNAME)/locale
	@cp -r locale/?? $(PKGNAME)/locale
	@sed 's/dvdisaster-%version%/$(PKGNAME)/' <installer.template >installer.iss
	@iscc installer.iss

